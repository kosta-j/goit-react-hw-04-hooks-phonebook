{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","components/Section/Section.module.css","components/Wrapper/Wrapper.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/Title/Title.jsx","components/Section/Section.jsx","components/Wrapper/Wrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","console","log","reset","preventDefault","className","s","inputTitle","type","input","pattern","title","required","onChange","submitBtn","ContactItem","children","item","ContactList","contacts","onDeleteBtnClick","contactList","map","contact","button","onClick","id","Filter","Notification","text","Title","Section","section","Wrapper","setContacts","filter","setFilter","useEffect","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","wrapper","data","uuidv4","length","alert","prevContacts","contactID","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1a93cdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"ContactForm_inputTitle__10kGx\",\"submitBtn\":\"ContactForm_submitBtn__2e2MH\",\"input\":\"ContactForm_input__2wSjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1tLKp\",\"item\":\"ContactList_item__2nKFc\",\"button\":\"ContactList_button__1sS6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"Filter_inputTitle__2nzGJ\",\"input\":\"Filter_input__1KDH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1kT55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2-EGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Wrapper_list__pIZ1O\",\"link\":\"Wrapper_link__2x9SY\",\"wrapper\":\"Wrapper_wrapper__37Dkx\"};","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        console.log('this data is not supported');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        <p className={s.inputTitle}>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.inputTitle}>Number</p>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.submitBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactItem({ name, number, children }) {\r\n  return (\r\n    <li className={s.item}>\r\n      {name}: {number}\r\n      {children}\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteBtnClick }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDeleteBtnClick={onDeleteBtnClick}\r\n        >\r\n          <button type={s.button} onClick={() => onDeleteBtnClick(contact.id)}>\r\n            Delete\r\n          </button>\r\n        </ContactItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteBtnClick: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <p className={s.inputTitle}>Find contacts by name</p>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ text }) {\r\n  return <p>{text}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Title.module.css';\r\n\r\nfunction Title({ title }) {\r\n  return <h2 className={s.title}>{title}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import Title from '../Title/Title';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <Title title={title} />\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport Notification from '../Notification/Notification';\r\nimport Section from '../Section/Section';\r\nimport s from './Wrapper.module.css';\r\n\r\nfunction Wrapper() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const localContacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(localContacts);\r\n    parsedContacts && setContacts(parsedContacts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const formSubmitHanler = data => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n\r\n    contacts.filter(item => item.name === data.name).length > 0\r\n      ? alert(`${contact.name} is already in contacts`)\r\n      : setContacts(prevContacts => [...prevContacts, contact]);\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const deleteContactHandler = contactID => {\r\n    console.log(contactID);\r\n    setContacts(prevContacts =>\r\n      prevContacts.filter(item => item.id !== contactID),\r\n    );\r\n  };\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm onSubmit={formSubmitHanler} />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        {contacts.length < 1 ? (\r\n          <Notification text=\"Contact list is empty\" />\r\n        ) : (\r\n          <>\r\n            <Filter value={filter} onChange={changeFilter} />\r\n            <ContactList\r\n              contacts={filteredContacts}\r\n              onDeleteBtnClick={deleteContactHandler}\r\n            />\r\n          </>\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import Wrapper from \"./components/Wrapper/Wrapper\";\n\nfunction App() {\n  return <Wrapper />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}